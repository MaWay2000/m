
const API=(typeof browser!=='undefined')?browser:chrome;
const DEFAULTS={strictOrder:true,showTimeline:true,debugLogs:false,openTaskEnabled:true,openTaskDelaySec:1,openTaskSound:true,openTaskNewWindow:true,openTaskFocus:true,openTaskUseHistory:true,openTaskOnlyJustNow:true,createEnabled:true,createDelaySec:1,createSound:true,viewEnabled:true,viewDelaySec:1,viewSound:true,viewCloseEnabled:false,viewCloseDelaySec:2,mergeEnabled:true,mergeDelaySec:3,mergeSound:true,mergeCloseEnabled:false,mergeCloseDelaySec:2,confirmEnabled:true,confirmDelaySec:3,confirmSound:true};
function $(id){return document.getElementById(id);}function clamp(v){v=Number(v)||1;return Math.max(1,Math.min(60,v));}
function load(){API.storage.local.get(DEFAULTS,(c)=>{['strictOrder','showTimeline','openTaskEnabled','openTaskSound','openTaskNewWindow','openTaskFocus','openTaskUseHistory','openTaskOnlyJustNow','createEnabled','createSound','viewEnabled','viewSound','viewCloseEnabled','mergeEnabled','mergeSound','mergeCloseEnabled','confirmEnabled','confirmSound'].forEach(id=>$(id).checked=!!c[id]);['openTaskDelaySec','createDelaySec','viewDelaySec','viewCloseDelaySec','mergeDelaySec','mergeCloseDelaySec','confirmDelaySec'].forEach(id=>$(id).value=clamp(c[id]));renderHistory();});}
function save(){const c={};['strictOrder','showTimeline','openTaskEnabled','openTaskSound','openTaskNewWindow','openTaskFocus','openTaskUseHistory','openTaskOnlyJustNow','createEnabled','createSound','viewEnabled','viewSound','viewCloseEnabled','mergeEnabled','mergeSound','mergeCloseEnabled','confirmEnabled','confirmSound'].forEach(id=>c[id]=$(id).checked);['openTaskDelaySec','createDelaySec','viewDelaySec','viewCloseDelaySec','mergeDelaySec','mergeCloseDelaySec','confirmDelaySec'].forEach(id=>c[id]=Math.max(1,Math.min(60,Number($(id).value)||1)));API.storage.local.set(c,()=>{const s=$('status');s.textContent='Saved.';setTimeout(()=>s.textContent='',1200);});}
function renderHistory(){API.runtime.sendMessage({type:'GET_TASK_HISTORY'},(resp)=>{const holder=document.getElementById('history');holder.innerHTML='';if(!resp||!resp.ok)return;const hist=resp.history||{};const steps=['opened','created','viewed','merged','confirmed'];const names={opened:'task open',created:'Create PR',viewed:'View PR',merged:'Merge PR',confirmed:'Confirm merge'};Object.entries(hist).sort((a,b)=>(b[1].lastTs||0)-(a[1].lastTs||0)).slice(0,30).forEach(([id,rec])=>{const div=document.createElement('div');div.className='task';const title=document.createElement('div');title.className='title';title.textContent=rec.title||id;div.appendChild(title);const row=document.createElement('div');steps.forEach(k=>{const badge=document.createElement('span');badge.className='badge '+(rec.steps&&rec.steps[k]?'on':'off');badge.textContent=names[k];row.appendChild(badge);});div.appendChild(row);holder.appendChild(div);});});}
document.addEventListener('DOMContentLoaded',()=>{load();document.getElementById('save').addEventListener('click',save);document.getElementById('resetFlow').addEventListener('click',()=>{API.runtime.sendMessage({type:'RESET_FLOW'},()=>alert('Flow approvals reset.'));});document.getElementById('clearSeen').addEventListener('click',()=>{API.runtime.sendMessage({type:'CLEAR_SEEN_TASKS'},()=>alert('Task ID history cleared.'));});document.getElementById('clearHistory').addEventListener('click',()=>{API.runtime.sendMessage({type:'CLEAR_TASK_HISTORY'},()=>{renderHistory();});});});